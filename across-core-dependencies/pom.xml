<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2019 the original author or authors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>spring-boot-dependencies</artifactId>
		<groupId>org.springframework.boot</groupId>
		<version>2.6.15</version>
		<relativePath/>
	</parent>

	<groupId>com.foreach.across</groupId>
	<artifactId>across-core-dependencies</artifactId>
	<version>${revision}</version>
	<packaging>pom</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>Across Core Dependencies</description>

	<url>https://foreach-across.github.io/</url>
	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Foreach</name>
			<organization>Foreach</organization>
			<organizationUrl>https://www.foreach.be</organizationUrl>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/foreach-across/across-framework</url>
	</scm>

	<properties>
		<revision>dev-SNAPSHOT</revision>
		<project.build.outputTimestamp>2024-01-01T00:00:00Z</project.build.outputTimestamp>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<!-- Overriden from spring-boot-dependencies -->
		<maven-surefire-plugin.version>3.2.3</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.2.3</maven-failsafe-plugin.version>
		<maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
		<maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>
		<!-- https://github.com/liquibase/liquibase/issues/1639 -->
		<liquibase.version>4.17.0</liquibase.version>
		<!-- Across properties -->
		<maven.deploy.skip>false</maven.deploy.skip>
		<foreach.common.version>1.1</foreach.common.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<testcontainers-bom.version>1.19.3</testcontainers-bom.version>
		<liquibase-slf4j.version>4.1.0</liquibase-slf4j.version>
		<commons-io.version>2.11.0</commons-io.version>
		<maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
		<spring-framework.version>5.3.33</spring-framework.version>
		<spring-security.version>5.6.12</spring-security.version>
		<tomcat.version>9.0.86</tomcat.version>
		<flatten-maven-plugin.version>1.4.1</flatten-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
		<!-- Spring Boot now comes with Lombok 1.18.22, but there is no corresponding version
			 of the (de)lombok-maven-plugin, so we stay with the old version for now:
		<version>${lombok.version}.0</version>
		-->
		<lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
		<maven-artifact-plugin.version>3.5.0</maven-artifact-plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>across</id>
			<name>Across Repository</name>
			<url>https://repository.antwerpen.io-external.com/nexus/repository/public/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<!-- Across core -->
			<dependency>
				<groupId>com.foreach.across</groupId>
				<artifactId>across-core</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.foreach.across</groupId>
				<artifactId>across-test</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>com.foreach.across</groupId>
				<artifactId>across-web</artifactId>
				<version>${revision}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Non-spring managed -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-core</artifactId>
				<version>${liquibase.version}</version>
			</dependency>
			<dependency>
				<groupId>com.mattbertolini</groupId>
				<artifactId>liquibase-slf4j</artifactId>
				<version>${liquibase-slf4j.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Foreach commons -->
			<dependency>
				<groupId>com.foreach.libs</groupId>
				<artifactId>common-spring</artifactId>
				<version>${foreach.common.version}</version>
			</dependency>
			<dependency>
				<groupId>com.foreach.libs</groupId>
				<artifactId>common-web</artifactId>
				<version>${foreach.common.version}</version>
			</dependency>
			<dependency>
				<groupId>com.foreach.libs</groupId>
				<artifactId>common-concurrent</artifactId>
				<version>${foreach.common.version}</version>
			</dependency>
			<dependency>
				<groupId>com.foreach.libs</groupId>
				<artifactId>common-test</artifactId>
				<version>${foreach.common.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.mockito</groupId>
						<artifactId>mockito-all</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Backwards compatibility with Spring Platform -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<systemPropertyVariables>
							<spring.main.allow-circular-references>true</spring.main.allow-circular-references>
							<spring.mvc.pathmatch.matching-strategy>ant-path-matcher</spring.mvc.pathmatch.matching-strategy>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<!-- Non-spring managed plugins -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<systemPropertyVariables>
							<!-- Use backward compatibility settings as documented in the release notes:
							     https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.6-Release-Notes -->
							<spring.main.allow-circular-references>true</spring.main.allow-circular-references>
							<spring.mvc.pathmatch.matching-strategy>ant-path-matcher</spring.mvc.pathmatch.matching-strategy>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok-maven-plugin</artifactId>
					<version>${lombok-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
					<pomElements>
						<pluginManagement>keep</pluginManagement>
						<properties>keep</properties>
						<repositories>remove</repositories>
						<profiles>keep</profiles>
						<modules>remove</modules>
						<build>remove</build>
					</pomElements>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>deploy</id>
			<build>
				<plugins>
					<plugin>
						<!--
						Unfortunately, in a multi-module build, this attaches the .buildinfo file
						only to the last module; see the note at the end of:
						https://maven.apache.org/plugins/maven-artifact-plugin/usage.html#recording-buildinfo-file
						-->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-artifact-plugin</artifactId>
						<version>${maven-artifact-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>buildinfo</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<keyname>${env.ACROSS_GPG_KEY_NAME}</keyname>
									<passphrase>${env.ACROSS_GPG_PASSPHRASE}</passphrase>
									<defaultKeyring>true</defaultKeyring>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonatype</id>
			<distributionManagement>
				<snapshotRepository>
					<id>sonatype</id>
					<name>Sonatype snapshots</name>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>sonatype</id>
					<name>Sonatype release staging</name>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
				</repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>across</id>
			<distributionManagement>
				<repository>
					<id>across</id>
					<name>Across Releases Repository</name>
					<url>https://repository.antwerpen.io-external.com/nexus/repository/across-releases/</url>
				</repository>
				<snapshotRepository>
					<id>across</id>
					<name>Across Snapshot Repository</name>
					<url>https://repository.antwerpen.io-external.com/nexus/repository/across-snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
	</profiles>

</project>
